<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <data name="LoremIpsum" xml:space="preserve">
    <value>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Vestibulum ipsum lacus, malesuada ac tempus id, gravida vel libero. Donec molestie rhoncus orci, ut bibendum est vestibulum at. Donec varius diam eu risus ultricies ut lobortis magna euismod. Nam pulvinar semper lectus. Mauris vestibulum posuere sollicitudin. Nulla augue neque, volutpat eget blandit ut, tincidunt ut est. Curabitur tincidunt, est vitae consequat condimentum, libero lectus ullamcorper nunc, vitae ornare magna mi malesuada arcu. Pellentesque at nibh vitae nisi congue adipiscing. Vestibulum et nibh tortor. In molestie interdum sem, nec laoreet nibh consequat sit amet. Quisque dapibus, ligula eu luctus molestie, nibh risus elementum mi, nec sollicitudin nisl ante dictum lacus. Ut pulvinar ligula at felis facilisis nec facilisis ligula eleifend. Quisque dignissim eros non sem blandit nec blandit erat ornare. Etiam tempus, mauris non pellentesque vehicula, orci ante pellentesque nisl, sed iaculis eros turpis in nisl. Phasellus sagittis posuere sagittis.

Cum sociis natoque penatibus et magnis dis parturient montes, nascetur ridiculus mus. Mauris adipiscing convallis nibh ut fringilla. Ut ac dolor nisi, id convallis neque. Praesent nisi libero, faucibus ut pretium in, suscipit in libero. Maecenas nisi augue, iaculis id interdum vel, feugiat vitae elit. Praesent quam erat, facilisis et adipiscing in, porttitor tempor metus. Donec ante tellus, dapibus vel sagittis id, aliquet ut nisl. Praesent semper risus massa, vitae facilisis nisl. Nunc feugiat semper nulla vitae mattis. Donec nisl quam, viverra eget scelerisque eget, adipiscing non tortor. Aenean iaculis justo eu turpis ullamcorper non varius dolor tempor. Duis placerat felis sed turpis bibendum ut laoreet lorem mollis.

Suspendisse potenti. Ut non justo non metus viverra mattis. Fusce pulvinar, elit nec interdum aliquam, nibh purus ultrices sem, sit amet pharetra orci dui ac ipsum. Fusce at tortor non nunc convallis viverra vitae eget tellus. Aliquam odio sem, vehicula a feugiat vitae, feugiat non purus. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Fusce hendrerit enim ac neque sodales feugiat.

Ut mi est, congue nec rhoncus quis, gravida ut ante. Morbi mollis elit nec sapien auctor semper. Nullam erat turpis, ullamcorper in vulputate sit amet, euismod in metus. Cras ullamcorper porttitor velit ac porta. Sed auctor hendrerit leo consectetur tempus. Maecenas et purus dolor, nec posuere justo. Nam in metus dictum neque sollicitudin gravida in dictum nisl. Mauris libero dolor, ultrices vel laoreet eget, ullamcorper nec nisl. Donec scelerisque neque id elit mattis varius. Aliquam ut pulvinar lorem. Fusce tortor felis, interdum vel ornare nec, eleifend lacinia ligula. In fringilla facilisis nunc, vel aliquam nisl dictum a. Duis lectus felis, rhoncus sed blandit sit amet, pulvinar ac sem. Suspendisse tempus ipsum eget tellus pretium elementum.

Etiam sagittis varius leo molestie venenatis. Pellentesque habitant morbi tristique senectus et netus et malesuada fames ac turpis egestas. Praesent lobortis pretium faucibus. Nulla ipsum arcu, dignissim nec tincidunt vel, feugiat in nisl. Aenean sit amet molestie mi. Class aptent taciti sociosqu ad litora torquent per conubia nostra, per inceptos himenaeos. Nunc nibh massa, dignissim non bibendum id, vulputate at nulla. Cras et tempus eros. Vivamus placerat egestas urna a vehicula. Phasellus urna libero, feugiat eget viverra nec, interdum a urna. Vestibulum lobortis ultrices malesuada. Suspendisse non libero velit.</value>
  </data>
</root>